{"ast":null,"code":"/*!\r\n * @copyright &copy; Kartik Visweswaran, Krajee.com, 2013 - 2015\r\n * @version 3.5.5\r\n *\r\n * A simple yet powerful JQuery star rating plugin that allows rendering fractional star ratings and supports\r\n * Right to Left (RTL) input.\r\n * \r\n * For more JQuery plugins visit http://plugins.krajee.com\r\n * For more Yii related demos visit http://demos.krajee.com\r\n */\n(function (factory) {\n  \"use strict\";\n\n  if (typeof define === 'function' && define.amd) {\n    // jshint ignore:line\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory); // jshint ignore:line\n  } else {\n    // noinspection JSUnresolvedVariable\n    if (typeof module === 'object' && module.exports) {\n      // jshint ignore:line\n      // Node/CommonJS\n      // noinspection JSUnresolvedVariable\n      module.exports = factory(require('jquery')); // jshint ignore:line\n    } else {\n      // Browser globals\n      factory(window.jQuery);\n    }\n  }\n})(function ($) {\n  \"use strict\";\n\n  $.fn.ratingLocales = {};\n  var DEFAULT_MIN, DEFAULT_MAX, DEFAULT_STEP, isEmpty, addCss, validateAttr, getDecimalPlaces, applyPrecision, Rating;\n  DEFAULT_MIN = 0;\n  DEFAULT_MAX = 5;\n  DEFAULT_STEP = 0.5;\n\n  isEmpty = function (value, trim) {\n    return value === null || value === undefined || value.length === 0 || trim && $.trim(value) === '';\n  };\n\n  addCss = function ($el, css) {\n    $el.removeClass(css).addClass(css);\n  };\n\n  validateAttr = function ($input, vattr, options) {\n    var chk = isEmpty($input.data(vattr)) ? $input.attr(vattr) : $input.data(vattr);\n    return chk ? chk : options[vattr];\n  };\n\n  getDecimalPlaces = function (num) {\n    var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    return !match ? 0 : Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n  };\n\n  applyPrecision = function (val, precision) {\n    return parseFloat(val.toFixed(precision));\n  };\n\n  Rating = function (element, options) {\n    this.$element = $(element);\n    this.init(options);\n  };\n\n  Rating.prototype = {\n    constructor: Rating,\n    _parseAttr: function (vattr, options) {\n      var self = this,\n          $el = self.$element,\n          elType = $el.attr('type'),\n          final,\n          val,\n          chk;\n\n      if (elType === 'range' || elType === 'number') {\n        val = validateAttr($el, vattr, options);\n\n        switch (vattr) {\n          case 'min':\n            chk = DEFAULT_MIN;\n            break;\n\n          case 'max':\n            chk = DEFAULT_MAX;\n            break;\n\n          default:\n            chk = DEFAULT_STEP;\n        }\n\n        final = isEmpty(val) ? chk : val;\n        return parseFloat(final);\n      }\n\n      return parseFloat(options[vattr]);\n    },\n    listenClick: function ($el, callback) {\n      $el.on('click touchstart', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.handled !== true) {\n          callback(e);\n          e.handled = true;\n        } else {\n          return false;\n        }\n      });\n    },\n    setDefault: function (key, val) {\n      var self = this;\n\n      if (isEmpty(self[key])) {\n        self[key] = val;\n      }\n    },\n    getPosition: function (e) {\n      var pageX = isEmpty(e.pageX) ? e.originalEvent.touches[0].pageX : e.pageX;\n      return pageX - this.$rating.offset().left;\n    },\n    listen: function () {\n      var self = this,\n          pos,\n          out;\n      self.initTouch();\n      self.listenClick(self.$rating, function (e) {\n        if (self.inactive) {\n          return false;\n        }\n\n        pos = self.getPosition(e);\n        self.setStars(pos);\n        self.$element.trigger('change').trigger('rating.change', [self.$element.val(), self.$caption.html()]);\n        self.starClicked = true;\n      });\n      self.$rating.on(\"mousemove\", function (e) {\n        if (!self.hoverEnabled || self.inactive) {\n          return;\n        }\n\n        self.starClicked = false;\n        pos = self.getPosition(e);\n        out = self.calculate(pos);\n        self.toggleHover(out);\n        self.$element.trigger('rating.hover', [out.val, out.caption, 'stars']);\n      });\n      self.$rating.on(\"mouseleave\", function () {\n        if (!self.hoverEnabled || self.inactive || self.starClicked) {\n          return;\n        }\n\n        out = self.cache;\n        self.toggleHover(out);\n        self.$element.trigger('rating.hoverleave', ['stars']);\n      });\n      self.$clear.on(\"mousemove\", function () {\n        var caption, val, width;\n\n        if (!self.hoverEnabled || self.inactive || !self.hoverOnClear) {\n          return;\n        }\n\n        self.clearClicked = false;\n        caption = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>';\n        val = self.clearValue;\n        width = self.getWidthFromValue(val);\n        out = {\n          caption: caption,\n          width: width,\n          val: val\n        };\n        self.toggleHover(out);\n        self.$element.trigger('rating.hover', [val, caption, 'clear']);\n      });\n      self.$clear.on(\"mouseleave\", function () {\n        if (!self.hoverEnabled || self.inactive || self.clearClicked || !self.hoverOnClear) {\n          return;\n        }\n\n        out = self.cache;\n        self.toggleHover(out);\n        self.$element.trigger('rating.hoverleave', ['clear']);\n      });\n      self.listenClick(self.$clear, function () {\n        if (!self.inactive) {\n          self.clear();\n          self.clearClicked = true;\n        }\n      });\n      $(self.$element[0].form).on(\"reset\", function () {\n        if (!self.inactive) {\n          self.reset();\n        }\n      });\n    },\n    destroy: function () {\n      var self = this,\n          $el = self.$element;\n\n      if (!isEmpty(self.$container)) {\n        self.$container.before($el).remove();\n      }\n\n      $.removeData($el.get(0));\n      $el.off('rating').removeClass('hide');\n    },\n    create: function (options) {\n      var self = this,\n          $el = self.$element;\n      options = options || self.options || {};\n      self.destroy();\n      $el.rating(options);\n    },\n    setTouch: function (e, flag) {\n      //noinspection JSUnresolvedVariable\n      var self = this,\n          ev,\n          touches,\n          pos,\n          out,\n          caption,\n          w,\n          width,\n          isTouchCapable = 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch;\n\n      if (!isTouchCapable || self.inactive) {\n        return;\n      }\n\n      ev = e.originalEvent; //noinspection JSUnresolvedVariable\n\n      touches = isEmpty(ev.touches) ? ev.touches : ev.changedTouches;\n      pos = self.getPosition(touches[0]);\n\n      if (flag) {\n        self.setStars(pos);\n        self.$element.trigger('change').trigger('rating.change', [self.$element.val(), self.$caption.html()]);\n        self.starClicked = true;\n      } else {\n        out = self.calculate(pos);\n        caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption;\n        w = self.getWidthFromValue(self.clearValue);\n        width = out.val <= self.clearValue ? self.rtl ? 100 - w + '%' : w + '%' : out.width;\n        self.$caption.html(caption);\n        self.$stars.css('width', width);\n      }\n    },\n    initTouch: function () {\n      var self = this;\n      self.$rating.on(\"touchstart touchmove touchend\", function (e) {\n        var flag = e.type === \"touchend\";\n        self.setTouch(e, flag);\n      });\n    },\n    initSlider: function (options) {\n      var self = this;\n\n      if (isEmpty(self.$element.val())) {\n        self.$element.val(0);\n      }\n\n      self.initialValue = self.$element.val();\n      self.setDefault('min', self._parseAttr('min', options));\n      self.setDefault('max', self._parseAttr('max', options));\n      self.setDefault('step', self._parseAttr('step', options));\n\n      if (isNaN(self.min) || isEmpty(self.min)) {\n        self.min = DEFAULT_MIN;\n      }\n\n      if (isNaN(self.max) || isEmpty(self.max)) {\n        self.max = DEFAULT_MAX;\n      }\n\n      if (isNaN(self.step) || isEmpty(self.step) || self.step === 0) {\n        self.step = DEFAULT_STEP;\n      }\n\n      self.diff = self.max - self.min;\n    },\n    init: function (options) {\n      var self = this,\n          $el = self.$element,\n          defaultStar,\n          starVal,\n          starWidth;\n      self.options = options;\n      $.each(options, function (key, value) {\n        self[key] = value;\n      });\n      self.starClicked = false;\n      self.clearClicked = false;\n      self.initSlider(options);\n      self.checkDisabled();\n      self.setDefault('rtl', $el.attr('dir'));\n\n      if (self.rtl) {\n        $el.attr('dir', 'rtl');\n      }\n\n      defaultStar = self.glyphicon ? '\\ue006' : '\\u2605';\n      self.setDefault('symbol', defaultStar);\n      self.setDefault('clearButtonBaseClass', 'clear-rating');\n      self.setDefault('clearButtonActiveClass', 'clear-rating-active');\n      self.setDefault('clearValue', self.min);\n      addCss($el, 'form-control hide');\n      self.$clearElement = isEmpty(options.clearElement) ? null : $(options.clearElement);\n      self.$captionElement = isEmpty(options.captionElement) ? null : $(options.captionElement);\n\n      if (self.$rating === undefined && self.$container === undefined) {\n        self.$rating = $(document.createElement(\"div\")).html('<div class=\"rating-stars\"></div>');\n        self.$container = $(document.createElement(\"div\"));\n        self.$container.before(self.$rating).append(self.$rating);\n        $el.before(self.$container).appendTo(self.$rating);\n      }\n\n      self.$stars = self.$rating.find('.rating-stars');\n      self.generateRating();\n      self.$clear = !isEmpty(self.$clearElement) ? self.$clearElement : self.$container.find('.' + self.clearButtonBaseClass);\n      self.$caption = !isEmpty(self.$captionElement) ? self.$captionElement : self.$container.find(\".caption\");\n      self.setStars();\n      self.listen();\n\n      if (self.showClear) {\n        self.$clear.attr({\n          \"class\": self.getClearClass()\n        });\n      }\n\n      starVal = $el.val();\n      starWidth = self.getWidthFromValue(starVal);\n      self.cache = {\n        caption: self.$caption.html(),\n        width: (self.rtl ? 100 - starWidth : starWidth) + '%',\n        val: starVal\n      };\n      $el.removeClass('rating-loading');\n    },\n    checkDisabled: function () {\n      var self = this;\n      self.disabled = validateAttr(self.$element, 'disabled', self.options);\n      self.readonly = validateAttr(self.$element, 'readonly', self.options);\n      self.inactive = self.disabled || self.readonly;\n    },\n    getClearClass: function () {\n      return this.clearButtonBaseClass + ' ' + (this.inactive ? '' : this.clearButtonActiveClass);\n    },\n    generateRating: function () {\n      var self = this,\n          clear = self.renderClear(),\n          caption = self.renderCaption(),\n          css = self.rtl ? 'rating-container-rtl' : 'rating-container',\n          stars = self.getStars();\n\n      if (self.glyphicon) {\n        css += (self.symbol === '\\ue006' ? ' rating-gly-star' : ' rating-gly') + self.ratingClass;\n      } else {\n        css += isEmpty(self.ratingClass) ? ' rating-uni' : ' ' + self.ratingClass;\n      }\n\n      self.$rating.attr('class', css);\n      self.$rating.attr('data-content', stars);\n      self.$stars.attr('data-content', stars);\n      css = self.rtl ? 'star-rating-rtl' : 'star-rating';\n      self.$container.attr('class', css + ' rating-' + self.size);\n      self.$container.removeClass('rating-active rating-disabled');\n\n      if (self.inactive) {\n        self.$container.addClass('rating-disabled');\n      } else {\n        self.$container.addClass('rating-active');\n      }\n\n      if (isEmpty(self.$caption)) {\n        if (self.rtl) {\n          self.$container.prepend(caption);\n        } else {\n          self.$container.append(caption);\n        }\n      }\n\n      if (isEmpty(self.$clear)) {\n        if (self.rtl) {\n          self.$container.append(clear);\n        } else {\n          self.$container.prepend(clear);\n        }\n      }\n\n      if (!isEmpty(self.containerClass)) {\n        addCss(self.$container, self.containerClass);\n      }\n    },\n    getStars: function () {\n      var self = this,\n          numStars = self.stars,\n          stars = '',\n          i;\n\n      for (i = 1; i <= numStars; i++) {\n        stars += self.symbol;\n      }\n\n      return stars;\n    },\n    renderClear: function () {\n      var self = this,\n          css;\n\n      if (!self.showClear) {\n        return '';\n      }\n\n      css = self.getClearClass();\n\n      if (!isEmpty(self.$clearElement)) {\n        addCss(self.$clearElement, css);\n        self.$clearElement.attr({\n          \"title\": self.clearButtonTitle\n        }).html(self.clearButton);\n        return '';\n      }\n\n      return '<div class=\"' + css + '\" title=\"' + self.clearButtonTitle + '\">' + self.clearButton + '</div>';\n    },\n    renderCaption: function () {\n      var self = this,\n          val = self.$element.val(),\n          html;\n\n      if (!self.showCaption) {\n        return '';\n      }\n\n      html = self.fetchCaption(val);\n\n      if (!isEmpty(self.$captionElement)) {\n        addCss(self.$captionElement, 'caption');\n        self.$captionElement.html(html);\n        return '';\n      }\n\n      return '<div class=\"caption\">' + html + '</div>';\n    },\n    fetchCaption: function (rating) {\n      var self = this,\n          val = parseFloat(rating),\n          css,\n          cap,\n          capVal,\n          cssVal,\n          vCap = self.starCaptions,\n          vCss = self.starCaptionClasses,\n          caption;\n      cssVal = typeof vCss === \"function\" ? vCss(val) : vCss[val];\n      capVal = typeof vCap === \"function\" ? vCap(val) : vCap[val];\n      cap = isEmpty(capVal) ? self.defaultCaption.replace(/\\{rating}/g, val) : capVal;\n      css = isEmpty(cssVal) ? self.clearCaptionClass : cssVal;\n      caption = val === self.clearValue ? self.clearCaption : cap;\n      return '<span class=\"' + css + '\">' + caption + '</span>';\n    },\n    getWidthFromValue: function (val) {\n      var self = this,\n          min = self.min,\n          max = self.max;\n\n      if (val <= min || min === max) {\n        return 0;\n      }\n\n      if (val >= max) {\n        return 100;\n      }\n\n      return (val - min) * 100 / (max - min);\n    },\n    getValueFromPosition: function (pos) {\n      var self = this,\n          precision = getDecimalPlaces(self.step),\n          val,\n          factor,\n          maxWidth = self.$rating.width();\n      factor = self.diff * pos / (maxWidth * self.step);\n      factor = self.rtl ? Math.floor(factor) : Math.ceil(factor);\n      val = applyPrecision(parseFloat(self.min + factor * self.step), precision);\n      val = Math.max(Math.min(val, self.max), self.min);\n      return self.rtl ? self.max - val : val;\n    },\n    toggleHover: function (out) {\n      var self = this,\n          w,\n          width,\n          caption;\n\n      if (self.hoverChangeCaption) {\n        caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption;\n        self.$caption.html(caption);\n      }\n\n      if (self.hoverChangeStars) {\n        w = self.getWidthFromValue(self.clearValue);\n        width = out.val <= self.clearValue ? self.rtl ? 100 - w + '%' : w + '%' : out.width;\n        self.$stars.css('width', width);\n      }\n    },\n    calculate: function (pos) {\n      var self = this,\n          defaultVal = isEmpty(self.$element.val()) ? 0 : self.$element.val(),\n          val = arguments.length ? self.getValueFromPosition(pos) : defaultVal,\n          caption = self.fetchCaption(val),\n          width = self.getWidthFromValue(val);\n\n      if (self.rtl) {\n        width = 100 - width;\n      }\n\n      width += '%';\n      return {\n        caption: caption,\n        width: width,\n        val: val\n      };\n    },\n    setStars: function (pos) {\n      var self = this,\n          out = arguments.length ? self.calculate(pos) : self.calculate();\n      self.$element.val(out.val);\n      self.$stars.css('width', out.width);\n      self.$caption.html(out.caption);\n      self.cache = out;\n    },\n    clear: function () {\n      var self = this,\n          title = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>';\n      self.$stars.removeClass('rated');\n\n      if (!self.inactive) {\n        self.$caption.html(title);\n      }\n\n      self.$element.val(self.clearValue);\n      self.setStars();\n      self.$element.trigger('rating.clear');\n    },\n    reset: function () {\n      var self = this;\n      self.$element.val(self.initialValue);\n      self.setStars();\n      self.$element.trigger('rating.reset');\n    },\n    update: function (val) {\n      var self = this;\n\n      if (!arguments.length) {\n        return;\n      }\n\n      self.$element.val(val);\n      self.setStars();\n    },\n    refresh: function (options) {\n      var self = this;\n\n      if (!arguments.length) {\n        return;\n      }\n\n      self.$rating.off('rating');\n\n      if (self.$clear !== undefined) {\n        self.$clear.off();\n      }\n\n      self.init($.extend(self.options, options));\n\n      if (self.showClear) {\n        self.$clear.show();\n      } else {\n        self.$clear.hide();\n      }\n\n      if (self.showCaption) {\n        self.$caption.show();\n      } else {\n        self.$caption.hide();\n      }\n\n      self.$element.trigger('rating.refresh');\n    }\n  };\n\n  $.fn.rating = function (option) {\n    var args = Array.apply(null, arguments),\n        retvals = [];\n    args.shift();\n    this.each(function () {\n      var $this = $(this),\n          data = $this.data('rating'),\n          defaults,\n          options = typeof option === 'object' && option,\n          lang = options.language || $this.data('language') || 'en';\n\n      if (!data) {\n        defaults = $.extend({}, $.fn.rating.defaults);\n\n        if (lang !== 'en' && !isEmpty($.fn.ratingLocales[lang])) {\n          defaults = $.extend(defaults, $.fn.ratingLocales[lang]);\n        }\n\n        data = new Rating(this, $.extend(defaults, options, $this.data()));\n        $this.data('rating', data);\n      }\n\n      if (typeof option === 'string') {\n        retvals.push(data[option].apply(data, args));\n      }\n    });\n\n    switch (retvals.length) {\n      case 0:\n        return this;\n\n      case 1:\n        return retvals[0];\n\n      default:\n        return retvals;\n    }\n  };\n\n  $.fn.rating.defaults = {\n    language: 'en',\n    stars: 5,\n    glyphicon: true,\n    symbol: null,\n    ratingClass: '',\n    disabled: false,\n    readonly: false,\n    rtl: false,\n    size: 'md',\n    showClear: true,\n    showCaption: true,\n    starCaptionClasses: {\n      0.5: 'label label-danger',\n      1: 'label label-danger',\n      1.5: 'label label-warning',\n      2: 'label label-warning',\n      2.5: 'label label-info',\n      3: 'label label-info',\n      3.5: 'label label-primary',\n      4: 'label label-primary',\n      4.5: 'label label-success',\n      5: 'label label-success'\n    },\n    clearButton: '<i class=\"glyphicon glyphicon-minus-sign\"></i>',\n    clearButtonBaseClass: 'clear-rating',\n    clearButtonActiveClass: 'clear-rating-active',\n    clearCaptionClass: 'label label-default',\n    clearValue: null,\n    captionElement: null,\n    clearElement: null,\n    containerClass: null,\n    hoverEnabled: true,\n    hoverChangeCaption: true,\n    hoverChangeStars: true,\n    hoverOnClear: true\n  };\n  $.fn.ratingLocales.en = {\n    defaultCaption: '{rating} Stars',\n    starCaptions: {\n      0.5: 'Half Star',\n      1: 'One Star',\n      1.5: 'One & Half Star',\n      2: 'Two Stars',\n      2.5: 'Two & Half Stars',\n      3: 'Three Stars',\n      3.5: 'Three & Half Stars',\n      4: 'Four Stars',\n      4.5: 'Four & Half Stars',\n      5: 'Five Stars'\n    },\n    clearButtonTitle: 'Clear',\n    clearCaption: 'Not Rated'\n  };\n  $.extend($.fn.rating.defaults, $.fn.ratingLocales.en);\n  $.fn.rating.Constructor = Rating;\n  /**\r\n   * Convert automatically inputs with class 'rating' into Krajee's star rating control.\r\n   */\n\n  $('input.rating').addClass('rating-loading');\n  $(document).ready(function () {\n    var $input = $('input.rating'),\n        count = Object.keys($input).length;\n\n    if (count > 0) {\n      $input.rating();\n    }\n  });\n});","map":{"version":3,"sources":["D:/cakegallary/node_modules/bootstrap-star-rating/js/star-rating.js"],"names":["factory","define","amd","module","exports","require","window","jQuery","$","fn","ratingLocales","DEFAULT_MIN","DEFAULT_MAX","DEFAULT_STEP","isEmpty","addCss","validateAttr","getDecimalPlaces","applyPrecision","Rating","value","trim","undefined","length","$el","css","removeClass","addClass","$input","vattr","options","chk","data","attr","num","match","Math","max","val","precision","parseFloat","toFixed","element","$element","init","prototype","constructor","_parseAttr","self","elType","final","listenClick","callback","on","e","stopPropagation","preventDefault","handled","setDefault","key","getPosition","pageX","originalEvent","touches","$rating","offset","left","listen","pos","out","initTouch","inactive","setStars","trigger","$caption","html","starClicked","hoverEnabled","calculate","toggleHover","caption","cache","$clear","width","hoverOnClear","clearClicked","clearCaptionClass","clearCaption","clearValue","getWidthFromValue","clear","form","reset","destroy","$container","before","remove","removeData","get","off","create","rating","setTouch","flag","ev","w","isTouchCapable","DocumentTouch","document","changedTouches","fetchCaption","rtl","$stars","type","initSlider","initialValue","isNaN","min","step","diff","defaultStar","starVal","starWidth","each","checkDisabled","glyphicon","$clearElement","clearElement","$captionElement","captionElement","createElement","append","appendTo","find","generateRating","clearButtonBaseClass","showClear","getClearClass","disabled","readonly","clearButtonActiveClass","renderClear","renderCaption","stars","getStars","symbol","ratingClass","size","prepend","containerClass","numStars","i","clearButtonTitle","clearButton","showCaption","cap","capVal","cssVal","vCap","starCaptions","vCss","starCaptionClasses","defaultCaption","replace","getValueFromPosition","factor","maxWidth","floor","ceil","hoverChangeCaption","hoverChangeStars","defaultVal","arguments","title","update","refresh","extend","show","hide","option","args","Array","apply","retvals","shift","$this","defaults","lang","language","push","en","Constructor","ready","count","Object","keys"],"mappings":"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","sourcesContent":["/*!\r\n * @copyright &copy; Kartik Visweswaran, Krajee.com, 2013 - 2015\r\n * @version 3.5.5\r\n *\r\n * A simple yet powerful JQuery star rating plugin that allows rendering fractional star ratings and supports\r\n * Right to Left (RTL) input.\r\n * \r\n * For more JQuery plugins visit http://plugins.krajee.com\r\n * For more Yii related demos visit http://demos.krajee.com\r\n */\r\n(function (factory) {\r\n    \"use strict\";\r\n    if (typeof define === 'function' && define.amd) { // jshint ignore:line\r\n        // AMD. Register as an anonymous module.\r\n        define(['jquery'], factory); // jshint ignore:line\r\n    } else { // noinspection JSUnresolvedVariable\r\n        if (typeof module === 'object' && module.exports) { // jshint ignore:line\r\n            // Node/CommonJS\r\n            // noinspection JSUnresolvedVariable\r\n            module.exports = factory(require('jquery')); // jshint ignore:line\r\n        } else {\r\n            // Browser globals\r\n            factory(window.jQuery);\r\n        }\r\n    }\r\n}(function ($) {\r\n    \"use strict\";\r\n\r\n    $.fn.ratingLocales = {};\r\n\r\n    var DEFAULT_MIN, DEFAULT_MAX, DEFAULT_STEP, isEmpty, addCss, validateAttr, getDecimalPlaces, applyPrecision, Rating;\r\n    DEFAULT_MIN = 0;\r\n    DEFAULT_MAX = 5;\r\n    DEFAULT_STEP = 0.5;\r\n    isEmpty = function (value, trim) {\r\n        return value === null || value === undefined || value.length === 0 || (trim && $.trim(value) === '');\r\n    };\r\n    addCss = function ($el, css) {\r\n        $el.removeClass(css).addClass(css);\r\n    };\r\n    validateAttr = function ($input, vattr, options) {\r\n        var chk = isEmpty($input.data(vattr)) ? $input.attr(vattr) : $input.data(vattr);\r\n        return chk ? chk : options[vattr];\r\n    };\r\n    getDecimalPlaces = function (num) {\r\n        var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n        return !match ? 0 : Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n    };\r\n    applyPrecision = function (val, precision) {\r\n        return parseFloat(val.toFixed(precision));\r\n    };\r\n    Rating = function (element, options) {\r\n        this.$element = $(element);\r\n        this.init(options);\r\n    };\r\n    Rating.prototype = {\r\n        constructor: Rating,\r\n        _parseAttr: function (vattr, options) {\r\n            var self = this, $el = self.$element, elType = $el.attr('type'), final, val, chk;\r\n            if (elType === 'range' || elType === 'number') {\r\n                val = validateAttr($el, vattr, options);\r\n                switch (vattr) {\r\n                    case 'min':\r\n                        chk = DEFAULT_MIN;\r\n                        break;\r\n                    case 'max':\r\n                        chk = DEFAULT_MAX;\r\n                        break;\r\n                    default:\r\n                        chk = DEFAULT_STEP;\r\n                }\r\n                final = isEmpty(val) ? chk : val;\r\n                return parseFloat(final);\r\n            }\r\n            return parseFloat(options[vattr]);\r\n        },\r\n        listenClick: function ($el, callback) {\r\n            $el.on('click touchstart', function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                if (e.handled !== true) {\r\n                    callback(e);\r\n                    e.handled = true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        setDefault: function (key, val) {\r\n            var self = this;\r\n            if (isEmpty(self[key])) {\r\n                self[key] = val;\r\n            }\r\n        },\r\n        getPosition: function (e) {\r\n            var pageX = isEmpty(e.pageX) ? e.originalEvent.touches[0].pageX : e.pageX;\r\n            return pageX - this.$rating.offset().left;\r\n        },\r\n        listen: function () {\r\n            var self = this, pos, out;\r\n            self.initTouch();\r\n            self.listenClick(self.$rating, function (e) {\r\n                if (self.inactive) {\r\n                    return false;\r\n                }\r\n                pos = self.getPosition(e);\r\n                self.setStars(pos);\r\n                self.$element.trigger('change').trigger('rating.change', [self.$element.val(), self.$caption.html()]);\r\n                self.starClicked = true;\r\n            });\r\n            self.$rating.on(\"mousemove\", function (e) {\r\n                if (!self.hoverEnabled || self.inactive) {\r\n                    return;\r\n                }\r\n                self.starClicked = false;\r\n                pos = self.getPosition(e);\r\n                out = self.calculate(pos);\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hover', [out.val, out.caption, 'stars']);\r\n            });\r\n            self.$rating.on(\"mouseleave\", function () {\r\n                if (!self.hoverEnabled || self.inactive || self.starClicked) {\r\n                    return;\r\n                }\r\n                out = self.cache;\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hoverleave', ['stars']);\r\n            });\r\n            self.$clear.on(\"mousemove\", function () {\r\n                var caption, val, width;\r\n                if (!self.hoverEnabled || self.inactive || !self.hoverOnClear) {\r\n                    return;\r\n                }\r\n                self.clearClicked = false;\r\n                caption = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>';\r\n                val = self.clearValue;\r\n                width = self.getWidthFromValue(val);\r\n                out = {caption: caption, width: width, val: val};\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hover', [val, caption, 'clear']);\r\n            });\r\n            self.$clear.on(\"mouseleave\", function () {\r\n                if (!self.hoverEnabled || self.inactive || self.clearClicked || !self.hoverOnClear) {\r\n                    return;\r\n                }\r\n                out = self.cache;\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hoverleave', ['clear']);\r\n            });\r\n            self.listenClick(self.$clear, function () {\r\n                if (!self.inactive) {\r\n                    self.clear();\r\n                    self.clearClicked = true;\r\n                }\r\n            });\r\n            $(self.$element[0].form).on(\"reset\", function () {\r\n                if (!self.inactive) {\r\n                    self.reset();\r\n                }\r\n            });\r\n        },\r\n        destroy: function () {\r\n            var self = this, $el = self.$element;\r\n            if (!isEmpty(self.$container)) {\r\n                self.$container.before($el).remove();\r\n            }\r\n            $.removeData($el.get(0));\r\n            $el.off('rating').removeClass('hide');\r\n        },\r\n        create: function (options) {\r\n            var self = this, $el = self.$element;\r\n            options = options || self.options || {};\r\n            self.destroy();\r\n            $el.rating(options);\r\n        },\r\n        setTouch: function (e, flag) {\r\n            //noinspection JSUnresolvedVariable\r\n            var self = this, ev, touches, pos, out, caption, w, width, isTouchCapable = 'ontouchstart' in window ||\r\n                (window.DocumentTouch && document instanceof window.DocumentTouch);\r\n            if (!isTouchCapable || self.inactive) {\r\n                return;\r\n            }\r\n            ev = e.originalEvent;\r\n            //noinspection JSUnresolvedVariable\r\n            touches = isEmpty(ev.touches) ? ev.touches : ev.changedTouches;\r\n            pos = self.getPosition(touches[0]);\r\n            if (flag) {\r\n                self.setStars(pos);\r\n                self.$element.trigger('change').trigger('rating.change', [self.$element.val(), self.$caption.html()]);\r\n                self.starClicked = true;\r\n            } else {\r\n                out = self.calculate(pos);\r\n                caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption;\r\n                w = self.getWidthFromValue(self.clearValue);\r\n                width = out.val <= self.clearValue ? (self.rtl ? (100 - w) + '%' : w + '%') : out.width;\r\n                self.$caption.html(caption);\r\n                self.$stars.css('width', width);\r\n            }\r\n        },\r\n        initTouch: function () {\r\n            var self = this;\r\n            self.$rating.on(\"touchstart touchmove touchend\", function (e) {\r\n                var flag = (e.type === \"touchend\");\r\n                self.setTouch(e, flag);\r\n            });\r\n        },\r\n        initSlider: function (options) {\r\n            var self = this;\r\n            if (isEmpty(self.$element.val())) {\r\n                self.$element.val(0);\r\n            }\r\n            self.initialValue = self.$element.val();\r\n            self.setDefault('min', self._parseAttr('min', options));\r\n            self.setDefault('max', self._parseAttr('max', options));\r\n            self.setDefault('step', self._parseAttr('step', options));\r\n            if (isNaN(self.min) || isEmpty(self.min)) {\r\n                self.min = DEFAULT_MIN;\r\n            }\r\n            if (isNaN(self.max) || isEmpty(self.max)) {\r\n                self.max = DEFAULT_MAX;\r\n            }\r\n            if (isNaN(self.step) || isEmpty(self.step) || self.step === 0) {\r\n                self.step = DEFAULT_STEP;\r\n            }\r\n            self.diff = self.max - self.min;\r\n        },\r\n        init: function (options) {\r\n            var self = this, $el = self.$element, defaultStar, starVal, starWidth;\r\n            self.options = options;\r\n            $.each(options, function (key, value) {\r\n                self[key] = value;\r\n            });\r\n            self.starClicked = false;\r\n            self.clearClicked = false;\r\n            self.initSlider(options);\r\n            self.checkDisabled();\r\n            self.setDefault('rtl', $el.attr('dir'));\r\n            if (self.rtl) {\r\n                $el.attr('dir', 'rtl');\r\n            }\r\n            defaultStar = self.glyphicon ? '\\ue006' : '\\u2605';\r\n            self.setDefault('symbol', defaultStar);\r\n            self.setDefault('clearButtonBaseClass', 'clear-rating');\r\n            self.setDefault('clearButtonActiveClass', 'clear-rating-active');\r\n            self.setDefault('clearValue', self.min);\r\n            addCss($el, 'form-control hide');\r\n            self.$clearElement = isEmpty(options.clearElement) ? null : $(options.clearElement);\r\n            self.$captionElement = isEmpty(options.captionElement) ? null : $(options.captionElement);\r\n            if (self.$rating === undefined && self.$container === undefined) {\r\n                self.$rating = $(document.createElement(\"div\")).html('<div class=\"rating-stars\"></div>');\r\n                self.$container = $(document.createElement(\"div\"));\r\n                self.$container.before(self.$rating).append(self.$rating);\r\n                $el.before(self.$container).appendTo(self.$rating);\r\n            }\r\n            self.$stars = self.$rating.find('.rating-stars');\r\n            self.generateRating();\r\n            self.$clear = !isEmpty(self.$clearElement) ? self.$clearElement : self.$container.find('.' + self.clearButtonBaseClass);\r\n            self.$caption = !isEmpty(self.$captionElement) ? self.$captionElement : self.$container.find(\".caption\");\r\n            self.setStars();\r\n            self.listen();\r\n            if (self.showClear) {\r\n                self.$clear.attr({\"class\": self.getClearClass()});\r\n            }\r\n            starVal = $el.val();\r\n            starWidth = self.getWidthFromValue(starVal);\r\n            self.cache = {\r\n                caption: self.$caption.html(),\r\n                width: (self.rtl ? (100 - starWidth) : starWidth) + '%',\r\n                val: starVal\r\n            };\r\n            $el.removeClass('rating-loading');\r\n        },\r\n        checkDisabled: function () {\r\n            var self = this;\r\n            self.disabled = validateAttr(self.$element, 'disabled', self.options);\r\n            self.readonly = validateAttr(self.$element, 'readonly', self.options);\r\n            self.inactive = (self.disabled || self.readonly);\r\n        },\r\n        getClearClass: function () {\r\n            return this.clearButtonBaseClass + ' ' + ((this.inactive) ? '' : this.clearButtonActiveClass);\r\n        },\r\n        generateRating: function () {\r\n            var self = this, clear = self.renderClear(), caption = self.renderCaption(),\r\n                css = self.rtl ? 'rating-container-rtl' : 'rating-container',\r\n                stars = self.getStars();\r\n            if (self.glyphicon) {\r\n                css += (self.symbol === '\\ue006' ? ' rating-gly-star' : ' rating-gly') + self.ratingClass;\r\n            } else {\r\n                css += isEmpty(self.ratingClass) ? ' rating-uni' : ' ' + self.ratingClass;\r\n            }\r\n            self.$rating.attr('class', css);\r\n            self.$rating.attr('data-content', stars);\r\n            self.$stars.attr('data-content', stars);\r\n            css = self.rtl ? 'star-rating-rtl' : 'star-rating';\r\n            self.$container.attr('class', css + ' rating-' + self.size);\r\n            self.$container.removeClass('rating-active rating-disabled');\r\n            if (self.inactive) {\r\n                self.$container.addClass('rating-disabled');\r\n            }\r\n            else {\r\n                self.$container.addClass('rating-active');\r\n            }\r\n            if (isEmpty(self.$caption)) {\r\n                if (self.rtl) {\r\n                    self.$container.prepend(caption);\r\n                } else {\r\n                    self.$container.append(caption);\r\n                }\r\n            }\r\n            if (isEmpty(self.$clear)) {\r\n                if (self.rtl) {\r\n                    self.$container.append(clear);\r\n                }\r\n                else {\r\n                    self.$container.prepend(clear);\r\n                }\r\n            }\r\n            if (!isEmpty(self.containerClass)) {\r\n                addCss(self.$container, self.containerClass);\r\n            }\r\n        },\r\n        getStars: function () {\r\n            var self = this, numStars = self.stars, stars = '', i;\r\n            for (i = 1; i <= numStars; i++) {\r\n                stars += self.symbol;\r\n            }\r\n            return stars;\r\n        },\r\n        renderClear: function () {\r\n            var self = this, css;\r\n            if (!self.showClear) {\r\n                return '';\r\n            }\r\n            css = self.getClearClass();\r\n            if (!isEmpty(self.$clearElement)) {\r\n                addCss(self.$clearElement, css);\r\n                self.$clearElement.attr({\"title\": self.clearButtonTitle}).html(self.clearButton);\r\n                return '';\r\n            }\r\n            return '<div class=\"' + css + '\" title=\"' + self.clearButtonTitle + '\">' + self.clearButton + '</div>';\r\n        },\r\n        renderCaption: function () {\r\n            var self = this, val = self.$element.val(), html;\r\n            if (!self.showCaption) {\r\n                return '';\r\n            }\r\n            html = self.fetchCaption(val);\r\n            if (!isEmpty(self.$captionElement)) {\r\n                addCss(self.$captionElement, 'caption');\r\n                self.$captionElement.html(html);\r\n                return '';\r\n            }\r\n            return '<div class=\"caption\">' + html + '</div>';\r\n        },\r\n        fetchCaption: function (rating) {\r\n            var self = this, val = parseFloat(rating), css, cap, capVal, cssVal,\r\n                vCap = self.starCaptions, vCss = self.starCaptionClasses, caption;\r\n            cssVal = typeof vCss === \"function\" ? vCss(val) : vCss[val];\r\n            capVal = typeof vCap === \"function\" ? vCap(val) : vCap[val];\r\n            cap = isEmpty(capVal) ? self.defaultCaption.replace(/\\{rating}/g, val) : capVal;\r\n            css = isEmpty(cssVal) ? self.clearCaptionClass : cssVal;\r\n            caption = (val === self.clearValue) ? self.clearCaption : cap;\r\n            return '<span class=\"' + css + '\">' + caption + '</span>';\r\n        },\r\n        getWidthFromValue: function (val) {\r\n            var self = this, min = self.min, max = self.max;\r\n            if (val <= min || min === max) {\r\n                return 0;\r\n            }\r\n            if (val >= max) {\r\n                return 100;\r\n            }\r\n            return (val - min) * 100 / (max - min);\r\n        },\r\n        getValueFromPosition: function (pos) {\r\n            var self = this, precision = getDecimalPlaces(self.step),\r\n                val, factor, maxWidth = self.$rating.width();\r\n            factor = (self.diff * pos) / (maxWidth * self.step);\r\n            factor = self.rtl ? Math.floor(factor) : Math.ceil(factor);\r\n            val = applyPrecision(parseFloat(self.min + factor * self.step), precision);\r\n            val = Math.max(Math.min(val, self.max), self.min);\r\n            return self.rtl ? (self.max - val) : val;\r\n        },\r\n        toggleHover: function (out) {\r\n            var self = this, w, width, caption;\r\n            if (self.hoverChangeCaption) {\r\n                caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption;\r\n                self.$caption.html(caption);\r\n            }\r\n            if (self.hoverChangeStars) {\r\n                w = self.getWidthFromValue(self.clearValue);\r\n                width = out.val <= self.clearValue ? (self.rtl ? (100 - w) + '%' : w + '%') : out.width;\r\n                self.$stars.css('width', width);\r\n            }\r\n        },\r\n        calculate: function (pos) {\r\n            var self = this, defaultVal = isEmpty(self.$element.val()) ? 0 : self.$element.val(),\r\n                val = arguments.length ? self.getValueFromPosition(pos) : defaultVal,\r\n                caption = self.fetchCaption(val), width = self.getWidthFromValue(val);\r\n            if (self.rtl) {\r\n                width = 100 - width;\r\n            }\r\n            width += '%';\r\n            return {caption: caption, width: width, val: val};\r\n        },\r\n        setStars: function (pos) {\r\n            var self = this, out = arguments.length ? self.calculate(pos) : self.calculate();\r\n            self.$element.val(out.val);\r\n            self.$stars.css('width', out.width);\r\n            self.$caption.html(out.caption);\r\n            self.cache = out;\r\n        },\r\n        clear: function () {\r\n            var self = this,\r\n                title = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>';\r\n            self.$stars.removeClass('rated');\r\n            if (!self.inactive) {\r\n                self.$caption.html(title);\r\n            }\r\n            self.$element.val(self.clearValue);\r\n            self.setStars();\r\n            self.$element.trigger('rating.clear');\r\n        },\r\n        reset: function () {\r\n            var self = this;\r\n            self.$element.val(self.initialValue);\r\n            self.setStars();\r\n            self.$element.trigger('rating.reset');\r\n        },\r\n        update: function (val) {\r\n            var self = this;\r\n            if (!arguments.length) {\r\n                return;\r\n            }\r\n            self.$element.val(val);\r\n            self.setStars();\r\n        },\r\n        refresh: function (options) {\r\n            var self = this;\r\n            if (!arguments.length) {\r\n                return;\r\n            }\r\n            self.$rating.off('rating');\r\n            if (self.$clear !== undefined) {\r\n                self.$clear.off();\r\n            }\r\n            self.init($.extend(self.options, options));\r\n            if (self.showClear) {\r\n                self.$clear.show();\r\n            } else {\r\n                self.$clear.hide();\r\n            }\r\n            if (self.showCaption) {\r\n                self.$caption.show();\r\n            } else {\r\n                self.$caption.hide();\r\n            }\r\n            self.$element.trigger('rating.refresh');\r\n        }\r\n    };\r\n\r\n    $.fn.rating = function (option) {\r\n        var args = Array.apply(null, arguments), retvals = [];\r\n        args.shift();\r\n        this.each(function () {\r\n            var $this = $(this), data = $this.data('rating'), defaults, options = typeof option === 'object' && option,\r\n                lang = options.language || $this.data('language') || 'en';\r\n\r\n            if (!data) {\r\n                defaults = $.extend({}, $.fn.rating.defaults);\r\n                if (lang !== 'en' && !isEmpty($.fn.ratingLocales[lang])) {\r\n                    defaults = $.extend(defaults, $.fn.ratingLocales[lang]);\r\n                }\r\n                data = new Rating(this, $.extend(defaults, options, $this.data()));\r\n                $this.data('rating', data);\r\n            }\r\n\r\n            if (typeof option === 'string') {\r\n                retvals.push(data[option].apply(data, args));\r\n            }\r\n        });\r\n        switch (retvals.length) {\r\n            case 0:\r\n                return this;\r\n            case 1:\r\n                return retvals[0];\r\n            default:\r\n                return retvals;\r\n        }\r\n    };\r\n\r\n    $.fn.rating.defaults = {\r\n        language: 'en',\r\n        stars: 5,\r\n        glyphicon: true,\r\n        symbol: null,\r\n        ratingClass: '',\r\n        disabled: false,\r\n        readonly: false,\r\n        rtl: false,\r\n        size: 'md',\r\n        showClear: true,\r\n        showCaption: true,\r\n        starCaptionClasses: {\r\n            0.5: 'label label-danger',\r\n            1: 'label label-danger',\r\n            1.5: 'label label-warning',\r\n            2: 'label label-warning',\r\n            2.5: 'label label-info',\r\n            3: 'label label-info',\r\n            3.5: 'label label-primary',\r\n            4: 'label label-primary',\r\n            4.5: 'label label-success',\r\n            5: 'label label-success'\r\n        },\r\n        clearButton: '<i class=\"glyphicon glyphicon-minus-sign\"></i>',\r\n        clearButtonBaseClass: 'clear-rating',\r\n        clearButtonActiveClass: 'clear-rating-active',\r\n        clearCaptionClass: 'label label-default',\r\n        clearValue: null,\r\n        captionElement: null,\r\n        clearElement: null,\r\n        containerClass: null,\r\n        hoverEnabled: true,\r\n        hoverChangeCaption: true,\r\n        hoverChangeStars: true,\r\n        hoverOnClear: true\r\n    };\r\n\r\n    $.fn.ratingLocales.en = {\r\n        defaultCaption: '{rating} Stars',\r\n        starCaptions: {\r\n            0.5: 'Half Star',\r\n            1: 'One Star',\r\n            1.5: 'One & Half Star',\r\n            2: 'Two Stars',\r\n            2.5: 'Two & Half Stars',\r\n            3: 'Three Stars',\r\n            3.5: 'Three & Half Stars',\r\n            4: 'Four Stars',\r\n            4.5: 'Four & Half Stars',\r\n            5: 'Five Stars'\r\n        },\r\n        clearButtonTitle: 'Clear',\r\n        clearCaption: 'Not Rated'\r\n    };\r\n\r\n    $.extend($.fn.rating.defaults, $.fn.ratingLocales.en);\r\n\r\n    $.fn.rating.Constructor = Rating;\r\n\r\n    /**\r\n     * Convert automatically inputs with class 'rating' into Krajee's star rating control.\r\n     */\r\n    $('input.rating').addClass('rating-loading');\r\n\r\n    $(document).ready(function () {\r\n        var $input = $('input.rating'), count = Object.keys($input).length;\r\n        if (count > 0) {\r\n            $input.rating();\r\n        }\r\n    });\r\n}));"]},"metadata":{},"sourceType":"script"}