{"ast":null,"code":"import _regeneratorRuntime from\"D:/cakegallary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/cakegallary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{cart_axios}from\"../index\";import{ToastContainer,toast}from'react-toastify';export function Orderplacethunk(data){console.log(\"thunk data from order\",data);return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:\"ORDERPALCE_FETCH\"});_context.next=3;return cart_axios({method:\"post\",url:\"https://apifromashu.herokuapp.com/api/addcakeorder\",data:data});case 3:result=_context.sent;console.log(\"resulllllllllllllll\",result.data.messageg);if(result.data){dispatch({type:\"ORDERPALCE_SUCESS\",payload:result.data});}else{dispatch({type:\"ORDERPALCE_FAILURE\"});}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}export function myOrderthunk(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:\"MYORDER_FETCH\"});_context2.next=3;return cart_axios({method:\"post\",url:\"https://apifromashu.herokuapp.com/api/cakeorders\",data:{}});case 3:result=_context2.sent;console.log(\"resulllllllllllllll\",result.data);if(result.data.cakeorders){dispatch({type:\"MYORDER_SUCESS\",payload:result.data.cakeorders});}else{dispatch({type:\"MYORDER_FAILURE\"});}case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();}","map":{"version":3,"sources":["D:/cakegallary/src/reduxstore/thunk.js"],"names":["cart_axios","ToastContainer","toast","Orderplacethunk","data","console","log","dispatch","type","method","url","result","messageg","payload","myOrderthunk","cakeorders"],"mappings":"uQAAA,OAAQA,UAAR,KAAyB,UAAzB,CAEA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CAEC,MAAQ,SAASC,CAAAA,eAAT,CAAyBC,IAAzB,CAA8B,CAClCC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAoCF,IAApC,EAED,+FAAO,iBAAOG,QAAP,6HACHA,QAAQ,CAAC,CACLC,IAAI,CAAC,kBADA,CAAD,CAAR,CADG,sBAIiBR,CAAAA,UAAU,CAAC,CAC3BS,MAAM,CAAC,MADoB,CAE3BC,GAAG,CAAC,oDAFuB,CAG3BN,IAAI,CAACA,IAHsB,CAAD,CAJ3B,QAICO,MAJD,eASHN,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAkCK,MAAM,CAACP,IAAP,CAAYQ,QAA9C,EACA,GAAGD,MAAM,CAACP,IAAV,CAAe,CACXG,QAAQ,CAAC,CACLC,IAAI,CAAC,mBADA,CAELK,OAAO,CAACF,MAAM,CAACP,IAFV,CAAD,CAAR,CAKH,CAND,IAOI,CACAG,QAAQ,CAAC,CACLC,IAAI,CAAC,oBADA,CAAD,CAAR,CAMH,CAxBE,sDAAP,+DA2BH,CACD,MAAQ,SAASM,CAAAA,YAAT,EAAuB,CAG5B,gGAAO,kBAAOP,QAAP,iIACHA,QAAQ,CAAC,CACLC,IAAI,CAAC,eADA,CAAD,CAAR,CADG,uBAIiBR,CAAAA,UAAU,CAAC,CAC3BS,MAAM,CAAC,MADoB,CAE3BC,GAAG,CAAC,kDAFuB,CAG3BN,IAAI,CAAC,EAHsB,CAAD,CAJ3B,QAICO,MAJD,gBASHN,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAkCK,MAAM,CAACP,IAAzC,EACA,GAAGO,MAAM,CAACP,IAAP,CAAYW,UAAf,CAA0B,CACtBR,QAAQ,CAAC,CACLC,IAAI,CAAC,gBADA,CAELK,OAAO,CAACF,MAAM,CAACP,IAAP,CAAYW,UAFf,CAAD,CAAR,CAKH,CAND,IAOI,CACAR,QAAQ,CAAC,CACLC,IAAI,CAAC,iBADA,CAAD,CAAR,CAMH,CAxBE,wDAAP,iEA2BF","sourcesContent":["import {cart_axios} from \"../index\"\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n export  function Orderplacethunk(data){\r\n     console.log(\"thunk data from order\",data)\r\n   \r\n    return async (dispatch)=>{\r\n        dispatch({\r\n            type:\"ORDERPALCE_FETCH\"\r\n        })\r\n        var result  = await cart_axios({\r\n            method:\"post\",\r\n            url:\"https://apifromashu.herokuapp.com/api/addcakeorder\",\r\n            data:data\r\n        })\r\n        console.log(\"resulllllllllllllll\",result.data.messageg)\r\n        if(result.data){\r\n            dispatch({\r\n                type:\"ORDERPALCE_SUCESS\",\r\n                payload:result.data\r\n            })\r\n          \r\n        }\r\n        else{\r\n            dispatch({\r\n                type:\"ORDERPALCE_FAILURE\"\r\n            })\r\n            \r\n              \r\n            \r\n        }\r\n       \r\n    }\r\n}\r\nexport  function myOrderthunk(){\r\n    \r\n  \r\n   return async (dispatch)=>{\r\n       dispatch({\r\n           type:\"MYORDER_FETCH\"\r\n       })\r\n       var result  = await cart_axios({\r\n           method:\"post\",\r\n           url:\"https://apifromashu.herokuapp.com/api/cakeorders\",\r\n           data:{}\r\n       })\r\n       console.log(\"resulllllllllllllll\",result.data)\r\n       if(result.data.cakeorders){\r\n           dispatch({\r\n               type:\"MYORDER_SUCESS\",\r\n               payload:result.data.cakeorders\r\n           })\r\n         \r\n       }\r\n       else{\r\n           dispatch({\r\n               type:\"MYORDER_FAILURE\"\r\n           })\r\n           \r\n             \r\n           \r\n       }\r\n      \r\n   }\r\n}"]},"metadata":{},"sourceType":"module"}