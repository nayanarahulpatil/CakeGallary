{"ast":null,"code":"import { all, takeEvery, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { cart_axios } from \"../index\";\n\nfunction* CartGenerator() {\n  // first make and async task  and based on result dispatch necessary action\n  var success = true;\n  yield put({\n    type: \"CART_FETCHING\"\n  });\n  var response = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/cakecart\",\n    data: {}\n  });\n\n  if (response.data.data) {\n    yield put({\n      type: \"CART_FTECHED\",\n      payload: response.data.data\n    });\n    console.log(\"data  from cart items \", response);\n  } else {\n    yield put({\n      type: \"CART_FAILURE\"\n    });\n  }\n}\n\n_c = CartGenerator;\n\nfunction* Cartoperation() {\n  // first make and async task  and based on result dispatch necessary action\n  var addcaketocart = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/addcaketocart\",\n    data: {}\n  });\n\n  if (addcaketocart.data.data) {\n    yield put({\n      type: \"CART_ADD\",\n      payload: addcaketocart.data.data\n    });\n  }\n\n  var removeonecakefromcart = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/removeonecakefromcart\",\n    data: {}\n  });\n\n  if (removeonecakefromcart.data.data) {\n    yield put({\n      type: \"CART_REMOVE\",\n      payload: removeonecakefromcart.data.data\n    });\n    console.log(\"data  from cart items \", removeonecakefromcart);\n  }\n\n  var removecakefromcart = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/removecakefromcart \",\n    data: {}\n  });\n\n  if (removecakefromcart.data.data) {\n    yield put({\n      type: \"CART_ADD\",\n      payload: removecakefromcart.data.data\n    });\n  }\n}\n\n_c2 = Cartoperation;\n\nfunction* CartSaga() {\n  yield takeEvery('Cart_Items', CartGenerator);\n}\n\n_c3 = CartSaga;\n\nfunction* CartoperationSaga() {\n  yield takeEvery('Cart_Opration', Cartoperation);\n}\n\n_c4 = CartoperationSaga;\nexport default function* RootSaga() {\n  yield all([CartSaga()]);\n}\n_c5 = RootSaga;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CartGenerator\");\n$RefreshReg$(_c2, \"Cartoperation\");\n$RefreshReg$(_c3, \"CartSaga\");\n$RefreshReg$(_c4, \"CartoperationSaga\");\n$RefreshReg$(_c5, \"RootSaga\");","map":{"version":3,"sources":["D:/cakegallary/src/reduxstore/saga.js"],"names":["all","takeEvery","put","axios","cart_axios","CartGenerator","success","type","response","method","url","data","payload","console","log","Cartoperation","addcaketocart","removeonecakefromcart","removecakefromcart","CartSaga","CartoperationSaga","RootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAcC,SAAd,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,UAAzB;;AAEA,UAAUC,aAAV,GAAyB;AACvB;AACF,MAAIC,OAAO,GAAG,IAAd;AACE,QAAMJ,GAAG,CAAC;AACNK,IAAAA,IAAI,EAAC;AADC,GAAD,CAAT;AAIA,MAAIC,QAAQ,GAAI,MAAMJ,UAAU,CAAC;AAACK,IAAAA,MAAM,EAAC,MAAR;AAChCC,IAAAA,GAAG,EAAC,gDAD4B;AAEhCC,IAAAA,IAAI,EAAC;AAF2B,GAAD,CAAhC;;AAMA,MAAGH,QAAQ,CAACG,IAAT,CAAcA,IAAjB,EAAsB;AAClB,UAAMT,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC,cADC;AAENK,MAAAA,OAAO,EAACJ,QAAQ,CAACG,IAAT,CAAcA;AAFhB,KAAD,CAAT;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAuCN,QAAvC;AACH,GAND,MAMK;AACH,UAAMN,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC;AADC,KAAD,CAAT;AAGD;AACF;;KAxBSF,a;;AA0BV,UAAUU,aAAV,GAAyB;AACrB;AACF,MAAIC,aAAa,GAAI,MAAMZ,UAAU,CAC/B;AAACK,IAAAA,MAAM,EAAC,MAAR;AACHC,IAAAA,GAAG,EAAC,qDADD;AAEHC,IAAAA,IAAI,EAAC;AAFF,GAD+B,CAArC;;AAIG,MAAGK,aAAa,CAACL,IAAd,CAAmBA,IAAtB,EAA2B;AAC5B,UAAMT,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC,UADC;AAENK,MAAAA,OAAO,EAACI,aAAa,CAACL,IAAd,CAAmBA;AAFrB,KAAD,CAAT;AAIH;;AAEG,MAAIM,qBAAqB,GAAG,MAAMb,UAAU,CACxC;AAACK,IAAAA,MAAM,EAAC,MAAR;AACHC,IAAAA,GAAG,EAAC,6DADD;AAEHC,IAAAA,IAAI,EAAC;AAFF,GADwC,CAA5C;;AAMA,MAAGM,qBAAqB,CAACN,IAAtB,CAA2BA,IAA9B,EAAmC;AAC/B,UAAMT,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC,aADC;AAENK,MAAAA,OAAO,EAACK,qBAAqB,CAACN,IAAtB,CAA2BA;AAF7B,KAAD,CAAT;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAuCG,qBAAvC;AACH;;AACD,MAAIC,kBAAkB,GAAK,MAAMd,UAAU,CACvC;AAACK,IAAAA,MAAM,EAAC,MAAR;AACHC,IAAAA,GAAG,EAAC,2DADD;AAEHC,IAAAA,IAAI,EAAC;AAFF,GADuC,CAA3C;;AAIC,MAAGO,kBAAkB,CAACP,IAAnB,CAAwBA,IAA3B,EAAgC;AACjC,UAAMT,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC,UADC;AAENK,MAAAA,OAAO,EAACM,kBAAkB,CAACP,IAAnB,CAAwBA;AAF1B,KAAD,CAAT;AAIH;AACE;;MApCOI,a;;AAuCV,UAAUI,QAAV,GAAoB;AAClB,QAAMlB,SAAS,CAAC,YAAD,EAAgBI,aAAhB,CAAf;AACD;;MAFSc,Q;;AAGV,UAAUC,iBAAV,GAA6B;AACzB,QAAMnB,SAAS,CAAC,eAAD,EAAmBc,aAAnB,CAAf;AACD;;MAFOK,iB;AAIV,eAAe,UAAUC,QAAV,GAAoB;AAElC,QAAMrB,GAAG,CAAC,CAACmB,QAAQ,EAAT,CAAD,CAAT;AACA;MAHwBE,Q","sourcesContent":["import {all , takeEvery , put} from \"redux-saga/effects\"\r\nimport axios from \"axios\"\r\nimport {cart_axios} from \"../index\"\r\n\r\nfunction *CartGenerator(){\r\n  // first make and async task  and based on result dispatch necessary action\r\nvar success = true\r\n  yield put({\r\n      type:\"CART_FETCHING\"\r\n  })\r\n\r\n  var response  = yield cart_axios({method:\"post\",\r\n   url:\"https://apifromashu.herokuapp.com/api/cakecart\",\r\n   data:{}\r\n  }\r\n  )\r\n\r\n  if(response.data.data){\r\n      yield put({\r\n          type:\"CART_FTECHED\",\r\n          payload:response.data.data\r\n      })\r\n      console.log(\"data  from cart items \" , response)\r\n  }else{\r\n    yield put({\r\n        type:\"CART_FAILURE\"\r\n    })\r\n  }\r\n}\r\n\r\nfunction *Cartoperation(){\r\n    // first make and async task  and based on result dispatch necessary action\r\n  var addcaketocart  = yield cart_axios(\r\n        {method:\"post\",\r\n     url:\"https://apifromashu.herokuapp.com/api/addcaketocart\",\r\n     data:{}})\r\n     if(addcaketocart.data.data){\r\n    yield put({\r\n        type:\"CART_ADD\",\r\n        payload:addcaketocart.data.data\r\n    })\r\n}\r\n  \r\n    var removeonecakefromcart = yield cart_axios(\r\n        {method:\"post\",\r\n     url:\"https://apifromashu.herokuapp.com/api/removeonecakefromcart\",\r\n     data:{}\r\n    }\r\n    )\r\n    if(removeonecakefromcart.data.data){\r\n        yield put({\r\n            type:\"CART_REMOVE\",\r\n            payload:removeonecakefromcart.data.data\r\n        })\r\n        console.log(\"data  from cart items \" , removeonecakefromcart)\r\n    }\r\n    var removecakefromcart   = yield cart_axios(\r\n        {method:\"post\",\r\n     url:\"https://apifromashu.herokuapp.com/api/removecakefromcart \",\r\n     data:{}})\r\n     if(removecakefromcart.data.data){\r\n    yield put({\r\n        type:\"CART_ADD\",\r\n        payload:removecakefromcart.data.data\r\n    })\r\n}\r\n  }\r\n\r\n\r\nfunction *CartSaga(){\r\n  yield takeEvery('Cart_Items' , CartGenerator)\r\n}\r\nfunction *CartoperationSaga(){\r\n    yield takeEvery('Cart_Opration' , Cartoperation)\r\n  }\r\n\r\nexport default function *RootSaga(){\r\n\r\n yield all([CartSaga()])\r\n}"]},"metadata":{},"sourceType":"module"}