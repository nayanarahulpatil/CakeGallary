{"ast":null,"code":"import { all, takeEvery, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { cart_axios } from \"../index\";\n\nfunction* CartGenerator() {\n  // first make and async task  and based on result dispatch necessary action\n  yield put({\n    type: \"CART_FETCHING\"\n  });\n  var response = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/cakecart\",\n    data: {}\n  });\n\n  if (response.data.data) {\n    yield put({\n      type: \"CART_FTECHED\",\n      payload: response.data.data\n    });\n    console.log(\"data  from cart items \", response);\n  } else {\n    yield put({\n      type: \"CART_FAILURE\"\n    });\n  }\n}\n\n_c = CartGenerator;\n\nfunction* Additemquntity(action) {\n  console.log(\"Itemadded in to the cart,,,,\", action.payload[0]);\n  yield put({\n    type: \"CARTQUT_FETCHING\"\n  });\n  var addcaketocart = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/addcaketocart\",\n    data: action.payload\n  });\n  console.log(\"datafromcart quantity\", addcaketocart.data);\n\n  if (addcaketocart.data.data) {\n    yield put({\n      type: \"CARTQUT_ADD\",\n      payload: addcaketocart.data.data\n    });\n  } else {\n    yield put({\n      type: \"CARTQUT_FAILURE\"\n    });\n  }\n}\n\n_c2 = Additemquntity;\n\nfunction* Removeitemquntity(action) {\n  var usercakeid = {\n    cakeid: action.payload\n  };\n  var removecartresponce = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/removeonecakefromcart\",\n    data: usercakeid\n  });\n  console.log(\"datafromcart quantity\", removecartresponce.data.message);\n\n  if (removecartresponce.data.message) {\n    yield put({\n      type: \"CARTQUT_REMOVE\",\n      payload: removecartresponce.data.message\n    });\n  } else {\n    yield put({\n      type: \"CARTQUT_FAILURE\"\n    });\n  }\n}\n\n_c3 = Removeitemquntity;\n\nfunction* Deleteitemquntity(action) {\n  var usercakeiddele = {\n    cakeid: action.payload\n  };\n  var removecartresponce = yield cart_axios({\n    method: \"post\",\n    url: \"https://apifromashu.herokuapp.com/api/removecakefromcart\",\n    data: usercakeiddele\n  });\n  console.log(\"datafromcart quantity\", removecartresponce.data.message);\n\n  if (removecartresponce.data.message) {\n    yield put({\n      type: \"CARTITEM_REMOVE\",\n      payload: removecartresponce.data.message\n    });\n  } else {\n    yield put({\n      type: \"CARTQUT_FAILURE\"\n    });\n  }\n}\n\n_c4 = Deleteitemquntity;\n\nfunction* CartSaga() {\n  yield takeEvery('Cart_Items', CartGenerator);\n}\n\n_c5 = CartSaga;\n\nfunction* additemquntitySaga() {\n  yield takeEvery('Add_Cart_Item_Quantity', Additemquntity);\n}\n\nfunction* removeitemquntitySaga() {\n  yield takeEvery('REMOVE_Cart_Item_Quantity', Removeitemquntity);\n}\n\nfunction* deleteitemquntitySaga() {\n  yield takeEvery('DELETE_Cart_Item_Quantity', Deleteitemquntity);\n}\n\nexport default function* RootSaga() {\n  yield all([CartSaga(), additemquntitySaga(), removeitemquntitySaga(), deleteitemquntitySaga()]);\n}\n_c6 = RootSaga;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CartGenerator\");\n$RefreshReg$(_c2, \"Additemquntity\");\n$RefreshReg$(_c3, \"Removeitemquntity\");\n$RefreshReg$(_c4, \"Deleteitemquntity\");\n$RefreshReg$(_c5, \"CartSaga\");\n$RefreshReg$(_c6, \"RootSaga\");","map":{"version":3,"sources":["D:/cakegallary/src/reduxstore/saga.js"],"names":["all","takeEvery","put","axios","cart_axios","CartGenerator","type","response","method","url","data","payload","console","log","Additemquntity","action","addcaketocart","Removeitemquntity","usercakeid","cakeid","removecartresponce","message","Deleteitemquntity","usercakeiddele","CartSaga","additemquntitySaga","removeitemquntitySaga","deleteitemquntitySaga","RootSaga"],"mappings":"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","sourcesContent":["import {all , takeEvery , put} from \"redux-saga/effects\"\r\nimport axios from \"axios\"\r\nimport {cart_axios} from \"../index\"\r\n\r\nfunction *CartGenerator(){\r\n  // first make and async task  and based on result dispatch necessary action\r\n\r\n  yield put({\r\n      type:\"CART_FETCHING\"\r\n  })\r\n\r\n  var response  = yield cart_axios({method:\"post\",\r\n   url:\"https://apifromashu.herokuapp.com/api/cakecart\",\r\n   data:{}\r\n  }\r\n  )\r\n\r\n  if(response.data.data){\r\n      yield put({\r\n          type:\"CART_FTECHED\",\r\n          payload:response.data.data\r\n      })\r\n      console.log(\"data  from cart items \" , response)\r\n  }else{\r\n    yield put({\r\n        type:\"CART_FAILURE\"\r\n    })\r\n  }\r\n}\r\n\r\nfunction *Additemquntity(action){\r\n \r\n console.log(\"Itemadded in to the cart,,,,\",action.payload[0])\r\n\r\n  yield put({\r\n    type:\"CARTQUT_FETCHING\"\r\n})\r\n   \r\n  var addcaketocart  = yield cart_axios(\r\n        {method:\"post\",\r\n     url:\"https://apifromashu.herokuapp.com/api/addcaketocart\",\r\n     data:action.payload})\r\n     console.log(\"datafromcart quantity\",addcaketocart.data)\r\n     if(addcaketocart.data.data){\r\n    yield put({\r\n        type:\"CARTQUT_ADD\",\r\n        payload:addcaketocart.data.data\r\n    })\r\n}else{\r\n  yield put({\r\n      type:\"CARTQUT_FAILURE\"\r\n  })\r\n}}\r\n\r\nfunction *Removeitemquntity(action) {\r\n\r\n  var usercakeid={cakeid:action.payload}\r\n  var removecartresponce = yield cart_axios(\r\n    {\r\n      method:\"post\",\r\n      url:\"https://apifromashu.herokuapp.com/api/removeonecakefromcart\",\r\n      data:usercakeid \r\n    })\r\n    console.log(\"datafromcart quantity\",removecartresponce.data.message)\r\n    if(removecartresponce.data.message)\r\n    {\r\n      yield put({\r\n        type:\"CARTQUT_REMOVE\",\r\n        payload:removecartresponce.data.message\r\n      })\r\n    }\r\n    else{\r\n      yield put({\r\n          type:\"CARTQUT_FAILURE\"\r\n      })\r\n}}\r\nfunction *Deleteitemquntity(action) {\r\n\r\n  var usercakeiddele={cakeid:action.payload}\r\n  var removecartresponce = yield cart_axios(\r\n    {\r\n      method:\"post\",\r\n      url:\"https://apifromashu.herokuapp.com/api/removecakefromcart\",\r\n      data:usercakeiddele \r\n    })\r\n    console.log(\"datafromcart quantity\",removecartresponce.data.message)\r\n    if(removecartresponce.data.message)\r\n    {\r\n      yield put({\r\n        type:\"CARTITEM_REMOVE\",\r\n        payload:removecartresponce.data.message\r\n      })\r\n    }\r\n    else{\r\n      yield put({\r\n          type:\"CARTQUT_FAILURE\"\r\n      })\r\n}}\r\n\r\nfunction *CartSaga(){\r\n  yield takeEvery('Cart_Items' , CartGenerator)\r\n}\r\nfunction *additemquntitySaga(){\r\n    yield takeEvery('Add_Cart_Item_Quantity' , Additemquntity)\r\n  }\r\n  function *removeitemquntitySaga(){\r\n    yield takeEvery('REMOVE_Cart_Item_Quantity' , Removeitemquntity)\r\n  }\r\n  function *deleteitemquntitySaga(){\r\n    yield takeEvery('DELETE_Cart_Item_Quantity' , Deleteitemquntity)\r\n  }\r\n\r\nexport default function *RootSaga(){\r\n\r\n yield all([CartSaga(),additemquntitySaga(),removeitemquntitySaga(),deleteitemquntitySaga()])\r\n}"]},"metadata":{},"sourceType":"module"}